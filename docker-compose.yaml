networks:
  database:
    driver: bridge

services:
  ## Frontend section ##
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - database
    command: npm run dev

  ## Backend section ##
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: sh -c "uvicorn backend.app.main:app --reload --port=8000 --host=0.0.0.0"
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - postgres
    env_file:
      - .env
    networks:
      - database

  ## Database section ##
  postgres:
    image: postgres:17
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - ./backend/init_database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - database

#  pgadmin:
#    image: dpage/pgadmin4:latest
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${ADMIN_EMAIL}
#      PGADMIN_DEFAULT_PASSWORD: ${ADMIN_PASSWORD}
#    ports:
#      - "5000:80"
#    depends_on:
#      - postgres
#    networks:
#      - database

